/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include "tcMenuU8g2.h"
#include <IoAbstraction.h>
#include <IoAbstractionWire.h>
#include <EepromItemStorage.h>
#include "PolyPen_langSelect.h"

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern U8G2_SSD1306_128X64_NONAME_F_HW_I2C gfx;
extern U8g2Drawable gfxDrawable;
extern GraphicsDeviceRenderer renderer;

// Any externals needed by IO expanders, EEPROMs etc
extern IoAbstractionRef ioexp_io8574;

// Global Menu Item exports
extern AnalogMenuItem menuKd;
extern AnalogMenuItem menuKi;
extern AnalogMenuItem menuKp;
extern BackMenuItem menuBackAdvanced;
extern SubMenuItem menuAdvanced;
extern AnalogMenuItem menuStepsPerMm;
extern BooleanMenuItem menuDedge;
extern AnalogMenuItem menuHstrt;
extern AnalogMenuItem menuHend;
extern AnalogMenuItem menuToff;
extern BooleanMenuItem menuReverse;
extern BooleanMenuItem menuInterpolate;
extern AnalogMenuItem menuHoldMultiplier;
extern EnumMenuItem menuMicrostep;
extern AnalogMenuItem menuCurrent;
extern BooleanMenuItem menuStealth;
extern BackMenuItem menuBackMotor;
extern SubMenuItem menuMotor;
extern BackMenuItem menuBackSettings;
extern SubMenuItem menuSettings;
extern AnalogMenuItem menuSpeed;
extern FloatMenuItem menuTemperature;
extern AnalogMenuItem menuSetpoint;
extern BooleanMenuItem menuRun;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuRun; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION onRun(int id);
void CALLBACK_FUNCTION onSetpointChange(int id);
void CALLBACK_FUNCTION onStepperSet(int id);

#endif // MENU_GENERATED_CODE_H
